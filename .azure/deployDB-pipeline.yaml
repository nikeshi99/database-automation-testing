trigger: none
  # branches:
  #   include:
  #   - main
  # paths:
  #   include:
  #   - Liquibase/
  #   - .azure/deployDB-pipeline.yaml
pr: none
resources:
  containers: 
  - container: Liquibase
    image: nikeshi/liquibase:v1
variables:
- group: db-dev
- name: info
  value: "--defaultsFile=Liquibase/liquibase.properties --username=$(devusername) --password=$(devpassword) --logLevel=info"
stages:
- stage: UpdatingDatabase
  pool:
    vmImage: 'ubuntu-latest'
  jobs:
  - job: CheckChanges
    displayName: 'Check changes'
    steps:
    - bash: |
        PATH_FILTER="Liquibase/db/changelog"
        CHANGED_FILES=$(git diff HEAD HEAD~ --name-only)
        MATCH_COUNT=0

        echo "Checking for file changes..."
        for FILE in $CHANGED_FILES
        do
          if [[ $FILE == *$PATH_FILTER* ]]; then
            echo "MATCH:  ${FILE} changed"
            MATCH_COUNT=$(($MATCH_COUNT+1))
          else
            echo "IGNORE: ${FILE} changed"
          fi
        done

        echo "$MATCH_COUNT match(es) for filter '$PATH_FILTER' found."
        if [[ $MATCH_COUNT -gt 0 ]]; then
          echo "##vso[task.setvariable variable=SOURCE_CODE_CHANGED;isOutput=true]true"
        else
          echo "##vso[task.setvariable variable=SOURCE_CODE_CHANGED;isOutput=true]false"
        fi
      name: check_changes
      displayName: 'Check changed files'
  - job: VerifyLiquibase 
    # dependsOn: CheckChanges
    # condition: eq(dependencies.CheckChanges.outputs['check_changes.SOURCE_CODE_CHANGED'], 'true')
    container: Liquibase
    steps:
    - checkout: self
    - script: |
        liquibase $(info) validate
        liquibase $(info) tag version_$(Build.SourceVersion)
        liquibase $(info) status --verbose
        liquibase $(info) updateSQl
    displayName: 'Verify Changes'
  - job: DeployDB
    dependsOn: VerifyLiquibase
    container: Liquibase    
    steps:
    - checkout: self
    - script: |
        liquibase $(info) update
    displayName: 'Finalize'
